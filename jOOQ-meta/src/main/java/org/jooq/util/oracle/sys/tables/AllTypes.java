/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * Description of types accessible to the user
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.0"},
                            comments = "This class is generated by jOOQ")
public class AllTypes extends org.jooq.impl.TableImpl<org.jooq.util.oracle.sys.tables.records.AllTypesRecord> {

	private static final long serialVersionUID = 1556212923;

	/**
	 * The singleton instance of ALL_TYPES
	 */
	public static final org.jooq.util.oracle.sys.tables.AllTypes ALL_TYPES = new org.jooq.util.oracle.sys.tables.AllTypes();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllTypesRecord> __RECORD_TYPE = org.jooq.util.oracle.sys.tables.records.AllTypesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllTypesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * Owner of the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Name of the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> TYPE_NAME = createField("TYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Object identifier (OID) of the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, byte[]> TYPE_OID = createField("TYPE_OID", org.jooq.impl.SQLDataType.BLOB, ALL_TYPES);

	/**
	 * Typecode of the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> TYPECODE = createField("TYPECODE", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Number of attributes in the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.math.BigDecimal> ATTRIBUTES = createField("ATTRIBUTES", org.jooq.impl.SQLDataType.NUMERIC, ALL_TYPES);

	/**
	 * Number of methods in the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.math.BigDecimal> METHODS = createField("METHODS", org.jooq.impl.SQLDataType.NUMERIC, ALL_TYPES);

	/**
	 * Is the type a predefined type?
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> PREDEFINED = createField("PREDEFINED", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Is the type an incomplete type?
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> INCOMPLETE = createField("INCOMPLETE", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Is the type a final type?
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> FINAL = createField("FINAL", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Is the type an instantiable type?
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> INSTANTIABLE = createField("INSTANTIABLE", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Owner of the supertype (null if type is not a subtype)
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> SUPERTYPE_OWNER = createField("SUPERTYPE_OWNER", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Name of the supertype (null if type is not a subtype)
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.lang.String> SUPERTYPE_NAME = createField("SUPERTYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR, ALL_TYPES);

	/**
	 * Number of local (not inherited) attributes (if any) in the subtype
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.math.BigDecimal> LOCAL_ATTRIBUTES = createField("LOCAL_ATTRIBUTES", org.jooq.impl.SQLDataType.NUMERIC, ALL_TYPES);

	/**
	 * Number of local (not inherited) methods (if any) in the subtype
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, java.math.BigDecimal> LOCAL_METHODS = createField("LOCAL_METHODS", org.jooq.impl.SQLDataType.NUMERIC, ALL_TYPES);

	/**
	 * Type id value of the type
	 */
	public static final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllTypesRecord, byte[]> TYPEID = createField("TYPEID", org.jooq.impl.SQLDataType.BLOB, ALL_TYPES);

	/**
	 * No further instances allowed
	 */
	private AllTypes() {
		super("ALL_TYPES", org.jooq.util.oracle.sys.Sys.SYS);
	}
}
