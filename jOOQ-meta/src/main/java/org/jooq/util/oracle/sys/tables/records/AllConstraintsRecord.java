/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * Constraint definitions on accessible tables
 */
@javax.annotation.Generated(value    = "http://jooq.sourceforge.net",
                            comments = "This class is generated by jOOQ")
public class AllConstraintsRecord extends org.jooq.impl.TableRecordImpl<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord> {

	private static final long serialVersionUID = 1194237302;

	/**
	 * Owner of the table
	 */
	public void setOwner(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.OWNER, value);
	}

	/**
	 * Owner of the table
	 */
	public java.lang.String getOwner() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.OWNER);
	}

	/**
	 * Name associated with constraint definition
	 */
	public void setConstraintName(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.CONSTRAINT_NAME, value);
	}

	/**
	 * Name associated with constraint definition
	 */
	public java.lang.String getConstraintName() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.CONSTRAINT_NAME);
	}

	/**
	 * Type of constraint definition
	 */
	public void setConstraintType(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.CONSTRAINT_TYPE, value);
	}

	/**
	 * Type of constraint definition
	 */
	public java.lang.String getConstraintType() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.CONSTRAINT_TYPE);
	}

	/**
	 * Name associated with table with constraint definition
	 */
	public void setTableName(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.TABLE_NAME, value);
	}

	/**
	 * Name associated with table with constraint definition
	 */
	public java.lang.String getTableName() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.TABLE_NAME);
	}

	/**
	 * Text of search condition for table check
	 */
	public void setSearchCondition(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.SEARCH_CONDITION, value);
	}

	/**
	 * Text of search condition for table check
	 */
	public java.lang.String getSearchCondition() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.SEARCH_CONDITION);
	}

	/**
	 * Owner of table used in referential constraint
	 */
	public void setROwner(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.R_OWNER, value);
	}

	/**
	 * Owner of table used in referential constraint
	 */
	public java.lang.String getROwner() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.R_OWNER);
	}

	/**
	 * Name of unique constraint definition for referenced table
	 */
	public void setRConstraintName(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.R_CONSTRAINT_NAME, value);
	}

	/**
	 * Name of unique constraint definition for referenced table
	 */
	public java.lang.String getRConstraintName() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.R_CONSTRAINT_NAME);
	}

	/**
	 * The delete rule for a referential constraint
	 */
	public void setDeleteRule(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.DELETE_RULE, value);
	}

	/**
	 * The delete rule for a referential constraint
	 */
	public java.lang.String getDeleteRule() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.DELETE_RULE);
	}

	/**
	 * Enforcement status of constraint - ENABLED or DISABLED
	 */
	public void setStatus(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.STATUS, value);
	}

	/**
	 * Enforcement status of constraint - ENABLED or DISABLED
	 */
	public java.lang.String getStatus() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.STATUS);
	}

	/**
	 * Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE
	 */
	public void setDeferrable(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.DEFERRABLE, value);
	}

	/**
	 * Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE
	 */
	public java.lang.String getDeferrable() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.DEFERRABLE);
	}

	/**
	 * Is the constraint deferred by default -  DEFERRED or IMMEDIATE
	 */
	public void setDeferred(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.DEFERRED, value);
	}

	/**
	 * Is the constraint deferred by default -  DEFERRED or IMMEDIATE
	 */
	public java.lang.String getDeferred() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.DEFERRED);
	}

	/**
	 * Was this constraint system validated? -  VALIDATED or NOT VALIDATED
	 */
	public void setValidated(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.VALIDATED, value);
	}

	/**
	 * Was this constraint system validated? -  VALIDATED or NOT VALIDATED
	 */
	public java.lang.String getValidated() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.VALIDATED);
	}

	/**
	 * Was the constraint name system generated? -  GENERATED NAME or USER NAME
	 */
	public void setGenerated(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.GENERATED, value);
	}

	/**
	 * Was the constraint name system generated? -  GENERATED NAME or USER NAME
	 */
	public java.lang.String getGenerated() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.GENERATED);
	}

	/**
	 * Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.
	 */
	public void setBad(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.BAD, value);
	}

	/**
	 * Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.
	 */
	public java.lang.String getBad() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.BAD);
	}

	/**
	 * If set, this flag will be used in optimizer
	 */
	public void setRely(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.RELY, value);
	}

	/**
	 * If set, this flag will be used in optimizer
	 */
	public java.lang.String getRely() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.RELY);
	}

	/**
	 * The date when this column was last enabled or disabled
	 */
	public void setLastChange(java.sql.Date value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.LAST_CHANGE, value);
	}

	/**
	 * The date when this column was last enabled or disabled
	 */
	public java.sql.Date getLastChange() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.LAST_CHANGE);
	}

	/**
	 * The owner of the index used by this constraint
	 */
	public void setIndexOwner(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.INDEX_OWNER, value);
	}

	/**
	 * The owner of the index used by this constraint
	 */
	public java.lang.String getIndexOwner() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.INDEX_OWNER);
	}

	/**
	 * The index used by this constraint
	 */
	public void setIndexName(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.INDEX_NAME, value);
	}

	/**
	 * The index used by this constraint
	 */
	public java.lang.String getIndexName() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.INDEX_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setInvalid(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.INVALID, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getInvalid() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.INVALID);
	}

	/**
	 * An uncommented item
	 */
	public void setViewRelated(java.lang.String value) {
		setValue(org.jooq.util.oracle.sys.tables.AllConstraints.VIEW_RELATED, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getViewRelated() {
		return getValue(org.jooq.util.oracle.sys.tables.AllConstraints.VIEW_RELATED);
	}

	/**
	 * Create a detached AllConstraintsRecord
	 */
	public AllConstraintsRecord() {
		super(org.jooq.util.oracle.sys.tables.AllConstraints.ALL_CONSTRAINTS);
	}
}
