/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.pg_catalog.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = "http://jooq.sourceforge.net",
                            comments = "This class is generated by jOOQ")
public class PgType extends org.jooq.impl.TableImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord> {

	private static final long serialVersionUID = -1190584211;

	/**
	 * The singleton instance of pg_type
	 */
	public static final org.jooq.util.postgres.pg_catalog.tables.PgType PG_TYPE = new org.jooq.util.postgres.pg_catalog.tables.PgType();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord> __RECORD_TYPE = org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPNAME = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typname", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPNAMESPACE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typnamespace", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPOWNER = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typowner", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Short> TYPLEN = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Short>("typlen", org.jooq.impl.SQLDataType.SMALLINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean> TYPBYVAL = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean>("typbyval", org.jooq.impl.SQLDataType.BOOLEAN, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPTYPE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typtype", org.jooq.impl.SQLDataType.CHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPCATEGORY = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typcategory", org.jooq.impl.SQLDataType.CHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean> TYPISPREFERRED = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean>("typispreferred", org.jooq.impl.SQLDataType.BOOLEAN, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean> TYPISDEFINED = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean>("typisdefined", org.jooq.impl.SQLDataType.BOOLEAN, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPDELIM = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typdelim", org.jooq.impl.SQLDataType.CHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPRELID = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typrelid", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPELEM = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typelem", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPARRAY = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typarray", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPINPUT = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typinput", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPOUTPUT = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typoutput", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPRECEIVE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typreceive", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPSEND = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typsend", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPMODIN = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typmodin", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPMODOUT = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typmodout", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPANALYZE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typanalyze", org.jooq.impl.SQLDataType.VARCHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPALIGN = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typalign", org.jooq.impl.SQLDataType.CHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPSTORAGE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typstorage", org.jooq.impl.SQLDataType.CHAR, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean> TYPNOTNULL = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Boolean>("typnotnull", org.jooq.impl.SQLDataType.BOOLEAN, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long> TYPBASETYPE = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Long>("typbasetype", org.jooq.impl.SQLDataType.BIGINT, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Integer> TYPTYPMOD = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Integer>("typtypmod", org.jooq.impl.SQLDataType.INTEGER, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Integer> TYPNDIMS = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.Integer>("typndims", org.jooq.impl.SQLDataType.INTEGER, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPDEFAULTBIN = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typdefaultbin", org.jooq.impl.SQLDataType.CLOB, PG_TYPE);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String> TYPDEFAULT = new org.jooq.impl.TableFieldImpl<org.jooq.util.postgres.pg_catalog.tables.records.PgTypeRecord, java.lang.String>("typdefault", org.jooq.impl.SQLDataType.CLOB, PG_TYPE);

	/**
	 * No further instances allowed
	 */
	private PgType() {
		super("pg_type", org.jooq.util.postgres.pg_catalog.PgCatalog.PG_CATALOG);
	}
}
