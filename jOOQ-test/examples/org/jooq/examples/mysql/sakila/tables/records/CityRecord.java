/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.mysql.sakila.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = "http://jooq.sourceforge.net",
                            comments = "This class is generated by jOOQ")
public class CityRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.mysql.sakila.tables.records.CityRecord> {

	private static final long serialVersionUID = -672593765;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setCityId(java.lang.Short value) {
		setValue(org.jooq.examples.mysql.sakila.tables.City.CITY_ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Short getCityId() {
		return getValue(org.jooq.examples.mysql.sakila.tables.City.CITY_ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.mysql.sakila.tables.records.AddressRecord> fetchAddressList() throws java.sql.SQLException {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Address.ADDRESS)
			.where(org.jooq.examples.mysql.sakila.tables.Address.CITY_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.City.CITY_ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 *
	 * @deprecated Because of risk of ambiguity (#187), code generation for this<br/>
	 *             method will not be supported anymore, soon.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public java.util.List<org.jooq.examples.mysql.sakila.tables.records.AddressRecord> getAddressList() throws java.sql.SQLException {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Address.ADDRESS)
			.where(org.jooq.examples.mysql.sakila.tables.Address.CITY_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.City.CITY_ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 */
	public void setCity(java.lang.String value) {
		setValue(org.jooq.examples.mysql.sakila.tables.City.CITY_, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getCity() {
		return getValue(org.jooq.examples.mysql.sakila.tables.City.CITY_);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.city.country_id]
	 * REFERENCES country [sakila.country.country_id]
	 * </pre></code>
	 */
	public void setCountryId(java.lang.Short value) {
		setValue(org.jooq.examples.mysql.sakila.tables.City.COUNTRY_ID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.city.country_id]
	 * REFERENCES country [sakila.country.country_id]
	 * </pre></code>
	 */
	public java.lang.Short getCountryId() {
		return getValue(org.jooq.examples.mysql.sakila.tables.City.COUNTRY_ID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.city.country_id]
	 * REFERENCES country [sakila.country.country_id]
	 * </pre></code>
	 */
	public org.jooq.examples.mysql.sakila.tables.records.CountryRecord fetchCountry() throws java.sql.SQLException {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY)
			.where(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.City.COUNTRY_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.city.country_id]
	 * REFERENCES country [sakila.country.country_id]
	 * </pre></code>
	 *
	 * @deprecated Because of risk of ambiguity (#187), code generation for this<br/>
	 *             method will not be supported anymore, soon.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public org.jooq.examples.mysql.sakila.tables.records.CountryRecord getCountry() throws java.sql.SQLException {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY)
			.where(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.City.COUNTRY_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setLastUpdate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.mysql.sakila.tables.City.LAST_UPDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getLastUpdate() {
		return getValue(org.jooq.examples.mysql.sakila.tables.City.LAST_UPDATE);
	}

	/**
	 * Create a detached CityRecord
	 */
	public CityRecord() {
		super(org.jooq.examples.mysql.sakila.tables.City.CITY);
	}

	/**
	 * Create an attached CityRecord
	 */
	public CityRecord(org.jooq.Configuration configuration) {
		super(org.jooq.examples.mysql.sakila.tables.City.CITY, configuration);
	}
}
