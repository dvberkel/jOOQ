/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.mysql.sakila.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.0"},
                            comments = "This class is generated by jOOQ")
public class InventoryRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.mysql.sakila.tables.records.InventoryRecord> {

	private static final long serialVersionUID = 1081368315;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setInventoryId(org.joou.UInteger value) {
		setValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.INVENTORY_ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public org.joou.UInteger getInventoryId() {
		return getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.INVENTORY_ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.mysql.sakila.tables.records.RentalRecord> fetchRentalList() {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Rental.RENTAL)
			.where(org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.INVENTORY_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.INVENTORY_ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.film_id]
	 * REFERENCES film [sakila.film.film_id]
	 * </pre></code>
	 */
	public void setFilmId(org.joou.UShort value) {
		setValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.FILM_ID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.film_id]
	 * REFERENCES film [sakila.film.film_id]
	 * </pre></code>
	 */
	public org.joou.UShort getFilmId() {
		return getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.FILM_ID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.film_id]
	 * REFERENCES film [sakila.film.film_id]
	 * </pre></code>
	 */
	public org.jooq.examples.mysql.sakila.tables.records.FilmRecord fetchFilm() {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Film.FILM)
			.where(org.jooq.examples.mysql.sakila.tables.Film.FILM.FILM_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.FILM_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.store_id]
	 * REFERENCES store [sakila.store.store_id]
	 * </pre></code>
	 */
	public void setStoreId(org.joou.UByte value) {
		setValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.STORE_ID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.store_id]
	 * REFERENCES store [sakila.store.store_id]
	 * </pre></code>
	 */
	public org.joou.UByte getStoreId() {
		return getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.STORE_ID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [sakila.inventory.store_id]
	 * REFERENCES store [sakila.store.store_id]
	 * </pre></code>
	 */
	public org.jooq.examples.mysql.sakila.tables.records.StoreRecord fetchStore() {
		return create()
			.selectFrom(org.jooq.examples.mysql.sakila.tables.Store.STORE)
			.where(org.jooq.examples.mysql.sakila.tables.Store.STORE.STORE_ID.equal(getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.STORE_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setLastUpdate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.LAST_UPDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getLastUpdate() {
		return getValue(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.LAST_UPDATE);
	}

	/**
	 * Create a detached InventoryRecord
	 */
	public InventoryRecord() {
		super(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY);
	}
}
