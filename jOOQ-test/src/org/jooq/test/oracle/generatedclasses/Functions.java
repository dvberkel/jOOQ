/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses;

/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored functions in TEST
 */
@javax.annotation.Generated(value    = "http://jooq.sourceforge.net",
                            comments = "This class is generated by jOOQ")
public final class Functions {

	/**
	 * Invoke F_ARRAYS1
	 *
	 * @param inArray
	 */
	public static org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord fArrays1(org.jooq.Configuration configuration, org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays1 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays1();
		f.setInArray(inArray);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_ARRAYS1
	 *
	 * @param inArray
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord fArrays1(java.sql.Connection connection, org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays1 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays1();
		f.setInArray(inArray);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_ARRAYS1 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord> fArrays1(org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays1 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays1();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Get F_ARRAYS1 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord> fArrays1(org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord> inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays1 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays1();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Invoke F_ARRAYS2
	 *
	 * @param inArray
	 */
	public static org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord fArrays2(org.jooq.Configuration configuration, org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays2 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays2();
		f.setInArray(inArray);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_ARRAYS2
	 *
	 * @param inArray
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord fArrays2(java.sql.Connection connection, org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays2 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays2();
		f.setInArray(inArray);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_ARRAYS2 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord> fArrays2(org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays2 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays2();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Get F_ARRAYS2 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord> fArrays2(org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberLongArrayRecord> inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays2 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays2();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Invoke F_ARRAYS3
	 *
	 * @param inArray
	 */
	public static org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord fArrays3(org.jooq.Configuration configuration, org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays3 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays3();
		f.setInArray(inArray);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_ARRAYS3
	 *
	 * @param inArray
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord fArrays3(java.sql.Connection connection, org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord inArray) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FArrays3 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays3();
		f.setInArray(inArray);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_ARRAYS3 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord> fArrays3(org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays3 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays3();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Get F_ARRAYS3 as a field
	 *
	 * @param inArray
	 */
	public static org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord> fArrays3(org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UStringArrayRecord> inArray) {
		org.jooq.test.oracle.generatedclasses.functions.FArrays3 f = new org.jooq.test.oracle.generatedclasses.functions.FArrays3();
		f.setInArray(inArray);

		return f.asField();
	}

	/**
	 * Invoke F_AUTHOR_EXISTS
	 *
	 * @param authorName
	 */
	public static java.math.BigDecimal fAuthorExists(org.jooq.Configuration configuration, java.lang.String authorName) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FAuthorExists f = new org.jooq.test.oracle.generatedclasses.functions.FAuthorExists();
		f.setAuthorName(authorName);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_AUTHOR_EXISTS
	 *
	 * @param authorName
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static java.math.BigDecimal fAuthorExists(java.sql.Connection connection, java.lang.String authorName) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FAuthorExists f = new org.jooq.test.oracle.generatedclasses.functions.FAuthorExists();
		f.setAuthorName(authorName);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 */
	public static org.jooq.Field<java.math.BigDecimal> fAuthorExists(java.lang.String authorName) {
		org.jooq.test.oracle.generatedclasses.functions.FAuthorExists f = new org.jooq.test.oracle.generatedclasses.functions.FAuthorExists();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Get F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 */
	public static org.jooq.Field<java.math.BigDecimal> fAuthorExists(org.jooq.Field<java.lang.String> authorName) {
		org.jooq.test.oracle.generatedclasses.functions.FAuthorExists f = new org.jooq.test.oracle.generatedclasses.functions.FAuthorExists();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Invoke F_GET_ONE_CURSOR
	 *
	 * @param bookIds
	 */
	public static org.jooq.Result<org.jooq.Record> fGetOneCursor(org.jooq.Configuration configuration, org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord bookIds) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor f = new org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor();
		f.setBookIds(bookIds);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_GET_ONE_CURSOR
	 *
	 * @param bookIds
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static org.jooq.Result<org.jooq.Record> fGetOneCursor(java.sql.Connection connection, org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord bookIds) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor f = new org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor();
		f.setBookIds(bookIds);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_GET_ONE_CURSOR as a field
	 *
	 * @param bookIds
	 */
	public static org.jooq.Field<org.jooq.Result<org.jooq.Record>> fGetOneCursor(org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord bookIds) {
		org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor f = new org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor();
		f.setBookIds(bookIds);

		return f.asField();
	}

	/**
	 * Get F_GET_ONE_CURSOR as a field
	 *
	 * @param bookIds
	 */
	public static org.jooq.Field<org.jooq.Result<org.jooq.Record>> fGetOneCursor(org.jooq.Field<org.jooq.test.oracle.generatedclasses.udt.records.UNumberArrayRecord> bookIds) {
		org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor f = new org.jooq.test.oracle.generatedclasses.functions.FGetOneCursor();
		f.setBookIds(bookIds);

		return f.asField();
	}

	/**
	 * Invoke F_NUMBER
	 *
	 * @param n
	 */
	public static java.math.BigDecimal fNumber(org.jooq.Configuration configuration, java.lang.Number n) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FNumber f = new org.jooq.test.oracle.generatedclasses.functions.FNumber();
		f.setN(n);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_NUMBER
	 *
	 * @param n
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static java.math.BigDecimal fNumber(java.sql.Connection connection, java.lang.Number n) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FNumber f = new org.jooq.test.oracle.generatedclasses.functions.FNumber();
		f.setN(n);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_NUMBER as a field
	 *
	 * @param n
	 */
	public static org.jooq.Field<java.math.BigDecimal> fNumber(java.lang.Number n) {
		org.jooq.test.oracle.generatedclasses.functions.FNumber f = new org.jooq.test.oracle.generatedclasses.functions.FNumber();
		f.setN(n);

		return f.asField();
	}

	/**
	 * Get F_NUMBER as a field
	 *
	 * @param n
	 */
	public static org.jooq.Field<java.math.BigDecimal> fNumber(org.jooq.Field<? extends java.lang.Number> n) {
		org.jooq.test.oracle.generatedclasses.functions.FNumber f = new org.jooq.test.oracle.generatedclasses.functions.FNumber();
		f.setN(n);

		return f.asField();
	}

	/**
	 * Invoke F_ONE
	 *
	 */
	public static java.math.BigDecimal fOne(org.jooq.Configuration configuration) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FOne f = new org.jooq.test.oracle.generatedclasses.functions.FOne();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F_ONE
	 *
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static java.math.BigDecimal fOne(java.sql.Connection connection) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.FOne f = new org.jooq.test.oracle.generatedclasses.functions.FOne();

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F_ONE as a field
	 *
	 */
	public static org.jooq.Field<java.math.BigDecimal> fOne() {
		org.jooq.test.oracle.generatedclasses.functions.FOne f = new org.jooq.test.oracle.generatedclasses.functions.FOne();

		return f.asField();
	}

	/**
	 * Invoke F317
	 *
	 * @param p1
	 * @param p2
	 * @param p3
	 * @param p4
	 */
	public static java.math.BigDecimal f317(org.jooq.Configuration configuration, java.lang.Number p1, java.lang.Number p2, java.lang.Number p3, java.lang.Number p4) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.F317 f = new org.jooq.test.oracle.generatedclasses.functions.F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F317
	 *
	 * @param p1
	 * @param p2
	 * @param p3
	 * @param p4
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static java.math.BigDecimal f317(java.sql.Connection connection, java.lang.Number p1, java.lang.Number p2, java.lang.Number p3, java.lang.Number p4) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.F317 f = new org.jooq.test.oracle.generatedclasses.functions.F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F317 as a field
	 *
	 * @param p1
	 * @param p2
	 * @param p3
	 * @param p4
	 */
	public static org.jooq.Field<java.math.BigDecimal> f317(java.lang.Number p1, java.lang.Number p2, java.lang.Number p3, java.lang.Number p4) {
		org.jooq.test.oracle.generatedclasses.functions.F317 f = new org.jooq.test.oracle.generatedclasses.functions.F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Get F317 as a field
	 *
	 * @param p1
	 * @param p2
	 * @param p3
	 * @param p4
	 */
	public static org.jooq.Field<java.math.BigDecimal> f317(org.jooq.Field<? extends java.lang.Number> p1, org.jooq.Field<? extends java.lang.Number> p2, org.jooq.Field<? extends java.lang.Number> p3, org.jooq.Field<? extends java.lang.Number> p4) {
		org.jooq.test.oracle.generatedclasses.functions.F317 f = new org.jooq.test.oracle.generatedclasses.functions.F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Invoke F377
	 *
	 */
	public static java.lang.Object f377(org.jooq.Configuration configuration) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.F377 f = new org.jooq.test.oracle.generatedclasses.functions.F377();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Invoke F377
	 *
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static java.lang.Object f377(java.sql.Connection connection) throws java.sql.SQLException {
		org.jooq.test.oracle.generatedclasses.functions.F377 f = new org.jooq.test.oracle.generatedclasses.functions.F377();

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get F377 as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> f377() {
		org.jooq.test.oracle.generatedclasses.functions.F377 f = new org.jooq.test.oracle.generatedclasses.functions.F377();

		return f.asField();
	}

	/**
	 * No instances
	 */
	private Functions() {}
}
